// Mocks generated by Mockito 5.4.6 from annotations
// in base_demo/test/features/books/data/repositories/book_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as dart_async;

import 'package:base_demo/features/books/data/datasources/book_local_data_source.dart'
    as local_datasource;
import 'package:base_demo/features/books/data/datasources/book_remote_data_source.dart'
    as remote_datasource;
import 'package:base_demo/features/books/data/models/book_model.dart' as book_model;
import 'package:base_demo/features/books/data/models/book_search_result_model.dart'
    as search_result_model;
import 'package:mockito/mockito.dart' as mockito;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeBookSearchResultModel_0 extends mockito.SmartFake
    implements search_result_model.BookSearchResultModel {
  _FakeBookSearchResultModel_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [BookRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockBookRemoteDataSource extends mockito.Mock
    implements remote_datasource.BookRemoteDataSource {
  MockBookRemoteDataSource() {
    mockito.throwOnMissingStub(this);
  }

  @override
  dart_async.Future<search_result_model.BookSearchResultModel> searchBooks({
    required String? query,
    int? page = 1,
    int? limit = 20,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#searchBooks, [], {
              #query: query,
              #page: page,
              #limit: limit,
            }),
            returnValue: dart_async.Future<search_result_model.BookSearchResultModel>.value(
              _FakeBookSearchResultModel_0(
                this,
                Invocation.method(#searchBooks, [], {
                  #query: query,
                  #page: page,
                  #limit: limit,
                }),
              ),
            ),
          )
          as dart_async.Future<search_result_model.BookSearchResultModel>);

  @override
  dart_async.Future<book_model.BookModel?> getBookDetails(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#getBookDetails, [key]),
            returnValue: dart_async.Future<book_model.BookModel?>.value(),
          )
          as dart_async.Future<book_model.BookModel?>);
}

/// A class which mocks [BookLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockBookLocalDataSource extends mockito.Mock
    implements local_datasource.BookLocalDataSource {
  MockBookLocalDataSource() {
    mockito.throwOnMissingStub(this);
  }

  @override
  dart_async.Future<void> saveBook(book_model.BookModel? book) =>
      (super.noSuchMethod(
            Invocation.method(#saveBook, [book]),
            returnValue: dart_async.Future<void>.value(),
            returnValueForMissingStub: dart_async.Future<void>.value(),
          )
          as dart_async.Future<void>);

  @override
  dart_async.Future<void> removeBook(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#removeBook, [key]),
            returnValue: dart_async.Future<void>.value(),
            returnValueForMissingStub: dart_async.Future<void>.value(),
          )
          as dart_async.Future<void>);

  @override
  dart_async.Future<List<book_model.BookModel>> getSavedBooks() =>
      (super.noSuchMethod(
            Invocation.method(#getSavedBooks, []),
            returnValue: dart_async.Future<List<book_model.BookModel>>.value(
              <book_model.BookModel>[],
            ),
          )
          as dart_async.Future<List<book_model.BookModel>>);

  @override
  dart_async.Future<bool> isBookSaved(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#isBookSaved, [key]),
            returnValue: dart_async.Future<bool>.value(false),
          )
          as dart_async.Future<bool>);

  @override
  dart_async.Future<book_model.BookModel?> getBookByKey(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#getBookByKey, [key]),
            returnValue: dart_async.Future<book_model.BookModel?>.value(),
          )
          as dart_async.Future<book_model.BookModel?>);
}
